* meeting notes June 05, 2022
** the raku study group

** announcements 
*** June 19th: next raku study group meeting (just a few days before...)
*** June 21-25: tprc: perl/raku conference 
**** 4 hours of Bruce Gray: talk + 3hr tutorial
***** https://tprc2022.sched.com/event/ylEK/command-line-filters-time-to-shine
***** https://tprc2022.sched.com/overview/type/Raku+Track

** some excerpts from the last meeting notes May 22, 2022
*** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2022may22.md
***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2022may22
*** topics
**** move/copy etc, larry wall, apocaylpse, etc.  more to come.
**** defined sigma operator experiments
***** got interested in this for silly reasons
****** https://www.reddit.com/r/programmingcirclejerk/comments/utsld6/ask_hn_why_doesnt_math_look_like_a_programming/
***** controlling precedence of custom operators
***** broken link in here: https://docs.raku.org/language/operators
****** https://docs.raku.org/language/language/functions#Precedence
****** "precedence of custom operators"
****** TODO BUG in docs
****** but this works, coming at it in other ways, WTF?
******* https://docs.raku.org/language/functions#Precedence
******* there's no link to this from here:
******** https://docs.raku.org/language/optut
***** bruce gray says you can define operator precedence relative to other existing operators
******* https://docs.raku.org/language/functions#Precedence
#+BEGIN_SRC perl6
sub infix:<!!>($a, $b) is tighter(&infix:<+>) {
    2 * ($a + $b)
}
#+END_SRC
**** inheriting from basic types, like an Int (Rob Ransbottom)


**** TODO raid previous meetings for ideas, do follow-up




