* meeting notes June 05, 2022
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2022may22.md
***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2022may22

*** topics
**** perl
***** perl 5.36 is out, showing some nice progress
****** features:
******* basic sub sigs, no longer "experimental" 
******* more flexible for loops, getting more raku-ish

****** the psc has clarified they're committed to backwards compatibility (within reason)
****** no published criteria for when they'll declare "Perl 7"
******* I'm pretty sure it's waiting on Corina
******* (ovid's guess is that could be a few years)

**** continuing adventures with move/copy/rename
***** roast test checks whether the old file name is gone after rename
****** roast/S32-io/rename.t
***** I found I needed to unlink the old after a rename
****** https://github.com/doomvox/raku-study/bin/2022mar13/tagger.raku
***** how can you resolve that contradiction? 
****** try this: roast test uses temp files in current directory
******* /home/doom/End/Cave/Raku/Wall/darkroast/S32-io/rename.t
******* eventually this will bt out: https://github.com/doomvox/darkroast
***** some basics
****** https://github.com/doomvox/raku-study/bin/2022jun05/trial-mkdir.raku

**** my intro to raku spiels need work: hyperoperators, junctions, etc.

**** rob ransbottom topics
***** possible bug in raku: appending to a hash with ,= op with slice from another hash  
****** https://github.com/doomvox/raku-study/bin/2022jun05/rob_ransbottom-comma_equals_hash_assignment.raku
****** https://github.com/doomvox/raku-study/bin/2022jun05/comma_equals_of_doom.raku
****** testing exceptions in code
https://docs.raku.org/language/testing
****** can use a try block to convert die to warn

***** equivalent of perl's optional export/imports
****** some people actually create individual tags for every item they want to export

***** .list and .List
****** if you write your own .List does .list see it? A: no, .list still works as always

***** operators
****** operators are functions
****** can you easily define a recursive operator


***** david christensen on perl5 modules with circular dependencies

****** currently uses:
     6  package Dpchrist::Lib5::Test;
     7 
     8 
     9  use strict;
    10  use warnings;
    11  use threads;
    12  use threads::shared;
    13 
    14  our @EXPORT_OK;
    15 
    16  BEGIN {
    17      @EXPORT_OK =        qw(
    18                              is_poly
    19                          );
    20  }
    21 
    22  use parent              qw(
    23                              Exporter
    24                              Test::Builder::Module
    25                          );


The key points are:

* Put the Exporter-related statements (lines 14-25) near the top of the module, before other code.

* Statement ordering is important:

  * First -- declare @EXPORT_OK, but do not define/ initialize it (line 14).

  * Next -- define/ initialize @EXPORT_OK in a BEGIN block (lines 16-20).

  * Finally -- 'use parent' to inherit from Exporter (lines 22, 23, and 25).

* The above module also happens to inherit from Test::Builder::Module. My other modules do not need or have line 24.

* As I develop code and introduce bugs, I frequently see warnings to the effect "subroutine redefined" when there is a circular loop between modules.  Once I fix the bugs, those warnings go away.


Without understanding the "how" and "why" of perl(1), Exporter, "compile time", "run time", "require", "use", "parent", "import", etc. -- of the several solutions myself and others have tried over time, this one seems to work the best for me.


*** save for next time

**** recent weekly challenges that weren't number theory trivia for once
***** Task 1: Hexadecimal Words; Task 2: K-Directory Diff
****** https://theweeklychallenge.org/blog/perl-weekly-challenge-166/
****** arne sommers
******* https://raku-musings.com/hexa-diff.html
***** Task 1: Scalable Vector Graphics (SVG); Task 2: Line of Best Fit
****** https://theweeklychallenge.org/blog/perl-weekly-challenge-165/
****** arne sommers
******* https://raku-musings.com/doubly-scalable.html
**** jonathan worthington on cro memory usage
***** https://stackoverflow.com/questions/72180995/understanding-cro-request-response-cycle-and-memory-use
**** jonathan worthington on operator precedence, = vs ,
***** https://stackoverflow.com/questions/72081593/assignment-destructuring-and-operator-precedence



** announcements 
*** June 19th: next raku study group meeting (just a few days before...)
*** June 21-25: tprc: perl/raku conference 
**** 4 hours of Bruce Gray: talk + 3hr tutorial
***** https://tprc2022.sched.com/event/ylEK/command-line-filters-time-to-shine
***** https://tprc2022.sched.com/overview/type/Raku+Track
