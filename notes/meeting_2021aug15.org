* meeting notes August 15, 2021
** callbacks
*** aka the "anonymous subs" of perl5, lambdas of lisp and other cs nerd langs
**** bruce gray likes "code blocks" despite the potential ambiguities
***** "callbacks" refers to how they're used
***** william michels suggests "gerund", verbs turned into nouns
**** https://github.com/doomvox/raku-study/tree/main/bin/2021jul11/anonymous_routines_with_placeholder_variables.raku
*** misc sub-topics:
**** sigils: $code vs &code
**** sub vs block
***** subs can use return
**** placeholder vars idiom
***** use the hat just once (the condom convention)

** twigils considered weird
*** Raku makes sigils an invariant part of a name.  
If it's @stuff when you declare it it's still @stuff[3] later
*** Raku now has twigils
**** they can sometimes be used like part of the name, but sometimes not
***** internal variables
has @!hidden;
***** variable with accessors
has @.stash;
***** Using @.stash internally
@!stash = (...);
***** placeholder vars
****** okay:
{ $^a eq $^b || $^a ?? "$^a|$^b" }
****** not okay:
if( $^a eq $^b ) { $^a } else {"$^a|$^b}
****** better:
if( $^a eq $^b ) { $a } else {"$a|$b}



** .round arguments, whining about the docs
https://github.com/doomvox/raku-study/tree/main/bin/2021jul11/round_to_nearest_100.raku
*** a case where I feel confused by the "signature" approach, despite knowing better
**** signatures are how things are defined, not how they're to be used
*** badly needs code examples.
*** naming of "scale" seems strange, hard to improve:
**** "place" isn't right, .round isn't limited to powers of ten
**** I think "nearest" might work:  you "round off to the nearest"

** Data::Dualmap, near first release
*** should handle all built-in datatypes
*** has most features of my perl5 Data::Math
**** custom callbacks, numerics, strings
**** implementing skip_keys patterns
***** for funsies, maybe accept junctions (use type Mu)?
***** last bugs:
****** (1) need to explicitly pass through when "skipping"
****** (2) subtle need to do data_qualify in either case
******* had an intermittant test failure: unpredicitable key ordering 
*** open question whether it would be better to generalize further
**** name "dualmap" suggests it applies a block to all leafs
**** "It's hard to generalize about generalization, sometimes it's good, sometimes not."
** data classes
*** custom classes as data containers (from June 20, 2021)

**** https://github.com/doomvox/raku-study/tree/main/bin/2021may16/data_container_class_iii.raku
***** spots example
****** schema: /home/doom/End/Cave/GraphVizDbiGeneral/Wall/graphs/schema_diagram.png
******* generated with: /home/doom/End/Cave/GraphVizDbiGeneral/bin/generate_schema_diagram_spots
****** https://github.com/doomvox/raku-study/tree/main/bin/2021may30/spots_data_container_class.raku

** david christensen expounds on erlang compared to raku and perl
*** "representational polymorphic" -- larry wall

** question about bruce gray's "reading files can't be this simple" 
*** https://speakerdeck.com/util/reading-files-cant-be-this-simple
*** https://conf.raku.org/talk/158 
*** .say for "gigabyte.txt".IO.lines.grep({ last if /^END/; /^a/ }) 
*** https://github.com/doomvox/raku-study/tree/main/bin/2021aug15/bruce_gray_io_lines_etc.raku

** the usual links:
*** meeting notes
**** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2021aug15.md
*** code examples:
**** https://github.com/doomvox/raku-study/tree/main/bin/2021aug15

** fun with raku on freebsd (bruce gray)
https://www.freshports.org/lang/rakudo/ 
https://cgit.freebsd.org/ports/commit/?id=a80c31a5dda807dcedb2391dc3e2c6f578f8ce3d 
