* meeting notes August 15, 2021
** callbacks
*** aka the "anonymous subs" of perl5, lambdas of lisp and other cs nerd langs
https://github.com/doomvox/raku-study/tree/main/bin/2021jul11/anonymous_routines_with_placeholder_variables.raku
*** misc sub-topics:
**** sigils: $code vs &code
**** sub vs block
***** subs can use return
**** placeholder vars idiom
***** use the hat just once (the condom convention)
** .round arguments
https://github.com/doomvox/raku-study/tree/main/bin/2021jul11/round_to_nearest_100.raku
** Data::Dualmap, first release
*** should handle all built-in datatypes
*** has most features of my perl5 Data::Math
**** custom callbacks, numerics, strings
**** TODO implement skip_keys patterns
***** for funsies, accept junctions (use type Mu)
** data classes
*** custom classes as data containers (from June 20, 2021)

**** https://github.com/doomvox/raku-study/tree/main/bin/2021may16/data_container_class_iii.raku
***** spots example
****** schema: /home/doom/End/Cave/GraphVizDbiGeneral/Wall/graphs/schema_diagram.png
******* generated with: /home/doom/End/Cave/GraphVizDbiGeneral/bin/generate_schema_diagram_spots
****** https://github.com/doomvox/raku-study/tree/main/bin/2021may30/spots_data_container_class.raku
** twigils considered weird
*** Raku makes sigils an invariant part of a name.  
If it's @stuff when you declare it it's still @stuff[3] later
*** Raku now has twigils
**** this can sometimes be used like part of the name, but sometimes not
***** internal variables
has @!mess;
***** variable with accessors
has @.stash;
***** Using @.stash internally
@!stash = (...);

** david christensen expounds on erlang compared to raku and perl
