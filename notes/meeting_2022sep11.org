* meeting notes September 11, 2022
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2022aug21.md
***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2022aug21

** current topics
*** perl question
**** https://interglacial.com/tpj/13b/

*** anyone seen Raku conference?

*** one-line twiddle
#+BEGIN_SRC cperl
($b, $a) = ($a, $b);
#+END_SRC 
**** perl
***** https://github.com/doomvox/raku-study/tree/main/bin/2022aug2101-twiddle_vars.pl
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug21/01-twiddle_vars.pl
**** raku
***** https://github.com/doomvox/raku-study/tree/main/bin/2022aug2102-twiddle_vars.raku
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug21/02-twiddle_vars.raku

*** strings modifications 
**** can be based on 
***** locations (places in the string)
****** substr
***** contents (what's in the string)
****** s///
***** combinations of the two 

**** substr-rw
***** like substr but you can use it on the left-hand side 
****** as with perl's dual usage "substr"

**** perl
***** https://github.com/doomvox/raku-study/tree/main/bin/2022aug21/10-modify_substr_via_subst.pl
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug21/10-modify_substr_via_subst.pl
**** raku
***** https://github.com/doomvox/raku-study/tree/main/bin/2022aug21/11-modify_substr_via_subst.raku
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug21/11-modify_substr_via_subst.raku

*** aside: issues with .match
***** https://github.com/doomvox/raku-study/tree/main/bin/2022aug21/match_basics_sigh.raku
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug21/match_basics_sigh.raku
***** https://docs.raku.org/routine/match
***** But see HACK in "11-modify_substr_via_subst.raku" linked to above


*** the revenge of the son of the return of junction gotchas
**** our story thus far:

***** Márton Polgár: junctions and negated operators (a bad raku trap)
****** negation with junctions goes outside the junction
****** https://github.com/doomvox/raku-study/tree/main/bin/2022aug07/issue_with_negated_operators_and_junctions.raku
****** really should be docummented on the traps page
****** these aren't equivalent:
#+BEGIN_SRC raku
.none %% 2 
#+END_SRC

#+BEGIN_SRC raku
.all  !%% 2 
#+END_SRC
****** archived irc discussion, larry wall on "english" understanding:
******* https://colabti.org/irclogger/irclogger_log/perl6?date=2016-08-21#l51
****** github issue:
******* https://github.com/rakudo/rakudo/issues/3748

****** examples of messing with junctions (local links for now, github left as an exercise):
******* Hint, these are equivalent: 
******** /home/doom/End/Cave/RakuStudy/Wall/raku-study
******** https://github.com/doomvox/raku-study/

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022aug07/issue_with_negated_operators_and_junctions.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/basic_junctions.pl6

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021feb21/simon_proctor_range_setops.pl6

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021may16/file_find.raku
******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021may30/file_find_with_junction_as_exclude.raku
******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021may30/file_find_with_junction_as_exclude-bills_attempt.raku
******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021may30/question_about_if_vs_ternary.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021may30/smartmatches_and_junctions.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021jun20/passing_junctions_to_subs.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021jun20/junctionism.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021sep26/multi_dispatch_with_overlapping_subset_types.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021nov07/junctions_sans_petticoats.raku

******* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2022jan30/whispering_nothings.raku

****** Ralph's remarks on the left-hand junction with smartmatch issue:
******* https://github.com/rakudo/rakudo/issues/4615

****** follow-up: passing junctions as an argument
******* File::Find exclude
******** https://www.nntp.perl.org/group/perl.perl6.users/2021/05/msg9917.html

******** https://github.com/doomvox/raku-study/tree/main/bin/2021may30/file_find_with_junction_as_exclude.raku
******** is this the canonical File::Find repo?  (brian d foy has one, too, but it looks stale)
https://github.com/tadzik/File-Find
********* DONE open issue / submit pull request to Mu the name and exclude arguments



****** junctions
******* basics
******** /home/doom/End/Cave/Perl6/Wall/raku-study/notes/junctions
******** https://www.nntp.perl.org/group/perl.perl6.users/2020/06/msg8870.html

*** review of some suggested reading
**** https://vrurg.github.io/arfb.html
**** https://vrurg.github.io/arfb-publication/03-containers-and-symbols/

** topics for next time
*** TODO raku for data science  
**** gradual types for gradually cleaning up data
**** https://p6steve.wordpress.com/2022/07/24/is-raku-dan-rubbersonic/

*** TODO william michels, corrupt json handling
**** https://unix.stackexchange.com/questions/706732/deleting-all-text-after-a-specific-string-for-multiple-text-files-in-a-directory/707180#707180


** earlier topics

*** Grammar.nqp
**** https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp
***** locally: /home/doom/End/Cave/Raku/Wall/rakudo/gen/moar/Grammar.nqp
**** has some features I'm unfamiliar with, e.g. ":my $blah" inside a grammar
**** had trouble seeing what "token comp_unit" does, exactly

*** regex feature: control what's captured with <( ... )>
***** <( isn't really equivalent to \K in a substitution
***** can do it with zero-width after/before matches
***** or by having multiple ordered captures, etc.

***** william michels turned up this on the subject:
https://stackoverflow.com/questions/63426361/raku-effect-of-capture-markers-is-lost-higher-up

** announcements 
*** September 11th: the next raku study group meeting
**** note: we're skipping labor day weekend

