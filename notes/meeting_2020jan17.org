* meeting notes Jan 17, 2021
 * Richard Hainsworth regex problem, matching pod6-like things
*** https://github.com/doomvox/raku-study/blob/main/bin/richard_hainsworth_regex_problem.pl6
**** main trouble was a double-star pattern, like: "(a*)*"
*** https://github.com/doomvox/raku-study/blob/main/bin/richard_hainsworth_grammar.raku
**** Yary Hluchan contribution: grammar-based solution
** github setup: got a number of people added as collaborators.  Anyone else interested?
** basic regex feature '%'
*** like a join, matches a sequence of *this* separated by *those*
#+BEGIN_SRC perl6
token head  { <head-word>+ % <[\ \t]>+ | '' }
#+END_SRC

** grammar token feature '~' 
*** indicate bracketing chars at the beginning of the token
#+BEGIN_SRC perl6
token meta-quoted { '"' ~ '"' <inside-quotes>* }
#+END_SRC

** basics of match objects
*** can have objects within objects, e.g. multiple named captures
*** dd doesn't dump *everything*: it picks a place to stop (and formatting is LTA)
*** if a named capture matches multiple times, you extract the hits as a list

** dynamic scoping in raku
https://github.com/doomvox/raku-study/blob/main/bin/accessing_dynamic_scope_via_star_twigil.pl6

** using coderefs in a substitution
https://github.com/doomvox/raku-study/blob/main/bin/substitution_using_a_callback.pl6

** news
*** slides for Yary Hluchan's recent talk at SV Perl "Raku: Optimize for Fun"
https://www.icloud.com/keynote/0rYAz1cfyzXNjGGYDfhS9dA1A#Raku-Optimize_for_Fun

** future subjects
*** grammars have rule and regexp as well as token
*** grammar debugger: a virtue of using grammars
*** regex: why would "<? before \/> \/" behave differently than just "\/"
*** list comprehension
**** grep, map, etc.
**** exists in raku, python-influenced, see python-to-raku pages, etc.

*** defining a defined and operator
**** any way to do lazy evaulation correctly?
#+BEGIN_SRC perl6
foo() && bar ()
#+END_SRC

