* meeting notes Jan 31, 2021
** agenda
*** hello, welcome (pretend you're a warm human being)
*** announcements  
**** svperl talk on regexes: https://www.meetup.com/SVPerl/events/fftdcsyccdbgb/
planning on following with a pack/unpack talk 
(what would Raku equivalent be?)
*** invite suggested topics
*** work on topics
*** today's code examples:
https://github.com/doomvox/raku-study/tree/main/bin/2021jan31
https://github.com/doomvox/raku-study/blob/main/bin/richard_hainsworth_role_class.pm6

** topics
*** Q: somewhere in the docs there's a good simple grammar example parsing ini-style format data
richard found this in regexs:
https://docs.raku.org/language/regexes#Subrules

*** sigils in raku: you can stash anything in a $ so what does it mean?
**** related to "containers"?
**** also twigils
*** regexes and grammars again
**** get a handle on basics
***** Note: initial grammar tutorial example in docs is too complex, focuses on proto and inheritence
https://docs.raku.org/language/grammar_tutorial
***** Follow Moritz Lenz?
**** simple parsing job: doomfiles
*** regexes
**** csv example: show difference of zero-width comma matching vs literal
**** play with %
*** string interpolation: "\s" is an error.  
Should it be " "? Note that "\n" and "\t" work.
*** Code by Richard Hainsworth (finanalyst): "The repeated code is irritating me."
https://github.com/doomvox/raku-study/commit/891a2e1b643b3c56f86d44ce91c5016e065c06c3

**** ways of clearing hash fields.  A bruce gray suggestion:
#+BEGIN_SRC perl6-mode
for %!hash1, %!hash2, %!hash3 <-> %h { %h = Empty }
#+END_SRC

But somewhat strangely, that doesn't work, and this does:
#+BEGIN_SRC perl6-mode
for %!hash1, %!hash2, %!hash3 -> %h { %h = Empty }
#+END_SRC

*** lambert lum: problem with recursive regexes

43.[ interview question; very hard]

Write a function that takes a string and returns a boolean indicating if 
are balanced () [] {}. This is valid [()]{}. This is not valid [)](}}.
Write your own test cases using Test::More.

Note: Currently a popular interview question, not just for Perl.
Lambert needed one hour for this question.

Hint: split with empty field will break a string into individual char

*** topic, david christensen, complex recursive data structures, loop detection,
walking in parallel, reduce operations, etc.

queue, thread safe, existing module (p5) close queue with undef value
awkward with multiple readers/writers (?)
create queue handle, open send/receive handles
recursive data structure
loop detection
comparison of recursives
walking recursives in parallel
reduce: work on a data structure rather than a list

Perl5 module: Test::Differences eq_or_diff

**** tarjan algorithm 
Richard Hainsworth: find strongly connected regions, because 
detecting loops in the general case is ~impossible (halting problem).

https://stackoverflow.com/questions/261573/best-algorithm-for-detecting-cycles-in-a-directed-graph
https://en.wikipedia.org/wiki/Tarjan%E2%80%99s_strongly_connected_components_algorithm

**** bruce gray
https://docs.raku.org/routine/WHERE 
*not* a silver bullet, though. 
https://metacpan.org/pod/circular::require 
https://perldoc.perl.org/B::Xref 

*** Raku phasers
CATCH/CONTROL

*** William Michels answer on stacko
https://stackoverflow.com/questions/65853009/is-there-a-programmatic-way-to-elaborate-the-half-winds-in-raku/65878823#65878823

** pod6
*** alan question, in pod6 if you "=begin blah" is blah arbitrary, or are they special values?
https://docs.raku.org/language/pod
**** It seems that it's arbitrary, but *some* values are special, such as 'comment'.
*** source code for docs is in pod, e.g. :
https://github.com/Raku/doc/blob/master/doc/Language/control.pod6
In depth docs:
https://docs.raku.org/language/pod#Block_structure 

