* meeting notes October 24, 2021                                      
** the raku study group
*** Rock-rock-rock rakudo High Scool
** the usual links:
*** meeting notes
**** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2021oct24.md
*** code examples:
**** https://github.com/doomvox/raku-study/tree/main/bin/2021oct24

** codesections on alternative idioms to multis and smartmatch
*** codesections = Daniel Sockwell
**** formatting of his blog is strange: chops code examples, mismatch dark/light backgrounds
***** https://github.com/codesections-personal/codesections
***** https://www.getgutenberg.io

*** https://www.codesections.com/blog/try-some-pattern-matching/
**** A good bit
#+BEGIN_SRC perl6
((try some-fn) // $default)
#+END_SRC
*** https://www.codesections.com/blog/pattern-matching-2/
*** https://www.reddit.com/r/rakulang/comments/q3mn13/lets_try_some_pattern_matching_codesections/
*** https://www.reddit.com/r/rakulang/comments/q3vstb/further_thoughts_on_raku_pattern_matching/

*** https://stackoverflow.com/questions/66233465/haskell-like-pattern-matching-in-raku

*** docs
| key      | url                                                                        |   |
|----------+----------------------------------------------------------------------------+---|
| for      | https://docs.raku.org/syntax/for                                           |   |
| try      | https://docs.raku.org/language/exceptions#try_blocks                       |   |
| sum      | https://docs.raku.org/routine/sum                                          |   |
| whenever | https://docs.raku.org/language/concurrency#index-entry-whenever            |   |
| when     | https://docs.raku.org/language/control#index-entry-control_flow__when-when |   |
| cando    | https://docs.raku.org/routine/cando                                        |   |
|          |                                                                            |   |

**** https://docs.raku.org/type/Signature#Capture_parameters

**** TODO cando docs problems
***** https://github.com/doomvox/raku-study/tree/main/bin/2021oct24/trial-cando.raku
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021oct24/trial-cando.raku

**** TODO stackoverflow question "exception not resumable"
***** https://github.com/doomvox/raku-study/tree/main/bin/2021oct24/try_catch_basics.raku
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021oct24/try_catch_basics.raku

** roast tests
*** https://github.com/rakudo/rakudo/issues/4547
**** but probably need an issue number for Raku/roast:
***** https://github.com/Raku/roast/issues/765
*** https://github.com/Raku/roast
**** "the spec is the tests"
***** a brief opinionated editorial that might possibly be controversial
****** roast tests still have gaps:
******* if anyone took us up on the claim that they're the "spec" we would have incompatible Rakus around.
******* suspect the in-crowd don't think the gaps are very important
******** coverage is good for their preferred working style

**** writing a new roast test
***** go to repo (in chromium): https://github.com/Raku/roast
***** github.org -> upper right -> Forks -> new fork -> put in doomvox
****** still haven't learned to do this via a command-line tool
******* https://cli.github.com/manual/gh_repo_fork
******* maybe this would work:
#+BEGIN_SRC sh
gh repo fork doomvox/doomvox --clone=false  ## NOT TESTED
#+END_SRC
******* gh is now the standard (?) github command-line tool
******** a brief opinionated editorial that might possibly be controversial
********* git, for all it's problems, has a traditional command-line style
********** distinguishes between "plumbing and porcelain"
*********** you can write slick gui tools using it, but aren't supposed to need them
********* gh:
********** likes to bug the user with questions 
********** presents the user with *drop-down menus*
********** can't work with all shells (emacs sub-shells are no good)
********** looks like it MIGHT have command-line options to silence questions
*********** documentation exists, but explanations are sketchy and examples of this usage are weak
********** not clear to me how scriptable it is

******* git clone of repository to a local working directory
#+BEGIN_SRC sh
cd /home/doom/End/Cave/Raku/Wall # location for dev trees
gh repo clone doomvox/roast      # use gnome-terminal, not emacs shell 
cd roast
#+END_SRC

******** existing tests: double-check is there anything in here
********* https://github.com/Raku/roast/blob/master/S12-subset/subtypes.t
/home/doom/End/Cave/Raku/Wall/roast/S12-subset/subtypes.t
********* https://github.com/Raku/roast/blob/master/S12-subset/multi-dispatch.t
/home/doom/End/Cave/Raku/Wall/roast/S12-subset/multi-dispatch.t

********* some Test features I've never seen before:
********** group-of
*********** Thats from a Test::Util module
************ https://github.com/Raku/roast/blob/master/packages/Test-Helpers/lib/Test/Util.pm6
/home/doom/End/Cave/Raku/Wall/roast/packages/Test-Helpers/lib/Test/Util.pm6
************ has decent pod

******* create dev branch and switch to it
#+BEGIN_SRC sh
git branch <branch_name>; git checkout <branch_name>
#+END_SRC

******* TODO write code
******** draft:
********* https://github.com/doomvox/raku-study/tree/main/bin/2021oct24/ambiguous_subset_matches_resolved_sequentially.t
********* /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2021oct24/ambiguous_subset_matches_resolved_sequentially.t
******* commit and push changes out
#+BEGIN_SRC sh
git commit -a -m'... (See issue #765)'  # can't hurt to include issue number
git push -u origin <branch_name>
#+END_SRC

******* github create issue (if you haven't already)
******** need the issue number for next step
******* github generate pullrequest
******** using gh (gnome-terminal, not emacs shell):
#+BEGIN_SRC sh
gh pr create --title "new test of multi-dispatch with where clauses" --body "Fixes #765"
#+END_SRC
******** makes you answer questions
********* first choose the parent repo
********** Raku/roast 
********* second choose the forked repo
********** doomvox/roast
********* message must refer to the issue: "Fixes #765" 

** Bruce Gray, perl weekly challenge:
**** https://github.com/Util/perlweeklychallenge-club/tree/branch-for-challenge-135/challenge-135/bruce-gray/raku
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-135/#TASK1

*** William Michels on stackexchange
**** https://unix.stackexchange.com/questions/674338/delete-last-n-characters-from-lines-within-file/674571#674571
**** https://unix.stackexchange.com/questions/673836/combine-multiple-greps-with-regex/674566#674566
**** https://unix.stackexchange.com/questions/673939/sed-and-regex-for-exif-renaming/674519#674519
**** https://unix.stackexchange.com/questions/674207/explanation-of-a-sed-command/674335#674335
**** https://unix.stackexchange.com/questions/674283/print-lines-where-every-word-of-the-line-with-capital-letters-starts-with-a-diff/674317#674317
**** https://unix.stackexchange.com/questions/672871/is-there-a-method-to-indicate-the-last-iteration-in-a-loop-over-lines-of-an-inpu/673944#673944
**** https://unix.stackexchange.com/questions/673798/how-to-remove-text-between-two-keywords-in-a-textfile/673821#673821
**** https://unix.stackexchange.com/questions/171115/use-sed-to-print-from-the-very-first-line-until-the-line-containing-the-last-occ/673757#673757
**** https://unix.stackexchange.com/questions/673515/add-suffix-to-certain-text-lines-if-and-only-if-the-suffix-is-not-present/673636#673636
**** https://unix.stackexchange.com/questions/673366/remove-lines-starting-with-pattern-a-or-b-except-when-they-contain-pattern-c-or/673631#673631
**** https://unix.stackexchange.com/questions/672890/shift-of-dates-in-a-csv-file-via-bash-script/673243#673243
**** https://unix.stackexchange.com/questions/336460/reverse-the-order-of-pairs-of-lines-of-a-text-file/672966#672966
**** https://unix.stackexchange.com/questions/672915/if-there-is-a-white-space-remove-it-if-none-ignore/672964#672964
**** https://unix.stackexchange.com/questions/659282/remove-lines-that-contain-two-string-matches/672705#672705
**** https://unix.stackexchange.com/questions/99431/print-lines-between-and-including-two-patterns/672602#672602
**** https://unix.stackexchange.com/search?q=Raku+XML
***** featured: munging jpeg exif data
****** https://unix.stackexchange.com/questions/673939/sed-and-regex-for-exif-renaming/674519#674519
******* https://docs.raku.org/routine/subst#Adverbs

** announcements
*** the ephemeral miniconf: nov 18 2021
**** https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-292j
** next meeting
*** next meeting: Nov 07, 2021
