* meeting notes October 24, 2021                                      
** the raku study group
*** Rock-rock-rock rakudo High Scool
** the usual links:
*** meeting notes
**** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2021oct24.md
*** code examples:
**** https://github.com/doomvox/raku-study/tree/main/bin/2021oct24
** in
*** codesections on alternative idioms to multis and smartmatch
**** codesections = Daniel Sockwell
**** https://www.codesections.com/blog/try-some-pattern-matching/
***** A good bit
#+BEGIN_SRC perl6
((try some-fn) // $default)
#+END_SRC
**** https://www.codesections.com/blog/pattern-matching-2/
**** https://www.reddit.com/r/rakulang/comments/q3mn13/lets_try_some_pattern_matching_codesections/
**** https://www.reddit.com/r/rakulang/comments/q3vstb/further_thoughts_on_raku_pattern_matching/

**** https://stackoverflow.com/questions/66233465/haskell-like-pattern-matching-in-raku

**** docs
| key      | url                                                                        |   |
|----------+----------------------------------------------------------------------------+---|
| for      | https://docs.raku.org/syntax/for                                           |   |
| try      | https://docs.raku.org/language/exceptions#try_blocks                       |   |
| sum      | https://docs.raku.org/routine/sum                                          |   |
| whenever | https://docs.raku.org/language/concurrency#index-entry-whenever            |   |
| when     | https://docs.raku.org/language/control#index-entry-control_flow__when-when |   |
| cando    | https://docs.raku.org/routine/cando                                        |   |
|          |                                                                            |   |

*** roast tests
**** https://github.com/rakudo/rakudo/issues/4547
***** but that's under rakudo/rakudo
***** pretty sure I need an issue number for Raku/roast
**** https://github.com/Raku/roast
***** "the spec is the tests"
****** a brief opinionated editorial that might possibly be controversial
***** writing a new roast test
****** go to repo (in chromium): https://github.com/Raku/roast
****** github.org -> upper right -> Forks -> new fork -> put in doomvox
******* still haven't learned to do this via a command-line tool
******** https://cli.github.com/manual/gh_repo_fork
******** maybe:
#+BEGIN_SRC sh
gh repo fork doomvox/doomvox --clone=false
#+END_SRC
******** gh: the standard (?) github command-line tool
********* a brief opinionated editorial that might possibly be controversial

******** git clone of repository to a local working directory
#+BEGIN_SRC sh
cd /home/doom/End/Cave/Raku/Wall # location for dev trees
gh repo clone doomvox/roast      # use gnome-terminal, not emacs shell 
cd roast
#+END_SRC

******** create dev branch and switch to it
#+BEGIN_SRC sh
git branch <branch_name>; git checkout <branch_name>
#+END_SRC

******** write code

******** commit and push changes out
#+BEGIN_SRC sh
git commit -a -m'... (See issue #4547)'  # can't hurt to include issue number
git push -u origin <branch_name>
#+END_SRC

******** github create issue (if you haven't already)
********* need the issue number for next step
******** github generate pullrequest
********* using gh (gnome-terminal, not emacs shell):
#+BEGIN_SRC sh
gh pr create --title "new test of multi-dispatch with where clauses" --body "Fixes #4547"
#+END_SRC
********* makes you answer questions
********** first choose the parent repo
*********** Raku/roast 
********** second choose the forked repo
*********** doomvox/roast
********** message must refer to the issue: "Fixes #4547" 

*** some third thing because I'm one of those guys
**** database table -> custom data objects

** out


** leftovers that I swear I will not leave here in this file
*** more on data-handling in raku

**** https://stackoverflow.com/questions/66926663/is-there-a-convenient-way-to-replicate-rs-concept-of-named-vectors-in-raku-p/67513527?noredirect=1#comment122449810_67513527
***** William Michaels objects to the word "Row" for a data-record in my solution
**** arrays-of-objects
***** https://www.reddit.com/r/rakulang/comments/pocomd/a_post_which_came_out_from_a_provocation/hczfj2r/
**** Data::Reshapers
***** https://raku.land/cpan:ANTONOV/Data::Reshapers
**** "format data into a table"
https://unix.stackexchange.com/questions/649799/format-data-into-a-table/655944#655944

**** secure json-ification, vadim belman
***** https://colabti.org/irclogger/irclogger_log/raku?date=2021-09-14#l100
***** https://vrurg.github.io/2021/09/14/Secure-JSONification
***** https://www.reddit.com/r/rakulang/comments/pocomd/a_post_which_came_out_from_a_provocation/

**** pairs of separators from a string
***** https://www.nntp.perl.org/group/perl.perl6.users/2021/09/msg10138.html
***** a discussion yary was involved in, which indicates there's something interesting

**** lispyness of raku
***** https://www.codesections.com/blog/raku-lisp-impression/
***** https://www.reddit.com/r/rakulang/comments/ptm7qx/rakus_surprisingly_good_lisp_impression/

**** old raku weekly
***** https://rakudoweekly.blog/2021/09/20/2021-38-questions-ideas-feedback/

** announcements
*** the ephemeral miniconf: nov 18 2021
**** https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-292j
** next meeting
*** next meeting: Nov 07, 2021
