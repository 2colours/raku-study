Problem: on a line like so:

   Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin

Using a single s/// operation, append the location
"/usr/local/bin" to the path, but only if it's not
present already:
     
     
          
    |  perl5                       |  raku                     |  comment                       |
    |------------------------------+---------------------------+--------------------------------|    
    |  $pattern =                  | $pattern =                |                                |
    |   qr{                        |  rx{                      |                                |
    |       ^                      |     ^                     | bos                            |
    |       (                      |     (                     | begin capture                  |
    |         [^=]*?   =  \s+      |      <-[=]>*?  \=  \s+    | paths are after '= '           |
    |         (?!                  |      <!before             | zero-width negative lookahead  |
    |           (?:                |        [                  | non-capturing grouping         |
    |             [^:]*            |          <-[:]>*?         | non-colons                     |
    |             :                |           \:              |   up to a colon                |
    |           )*                 |        ]*                 | 0 or more of the group         |
    |           /usr/local/bin     |        '/usr/local/bin'   |                                |
    |           (?:                |        [                  |                                |
    |             :  |             |          \: |             | colon or...                    |
    |             $   )            |          $   ]            |    end-of-string               |
    |       )                      |       >                   | end of zero-width group        |
    |       .*                     |      .*                   | everything (after that =)      |
    |       )                      |      )                    | end capture                    |
    |       $                      |      $                    | eos                            |
    |     }x;                      |    };                     |                                |
    |                              |                           |                                |
    |                              |                           |                                |
    |  $line =~                    |  $line ~~                 |                                |
    |   s{ $pattern }{\1$append}x; |    s/$pattern/$/$append/; |                                |
    |                              |                           |                                |
    |   $1 works too               |  $/ works, but not $0 (?) |                                |
                                                               
                                                               
                                                               
p5: 58 chars                                                   
qr{^([^=]*?=\s+(?!(?:[^:]*:)*/usr/local/bin(?::|$)).*)$}x;     
                                                     
raku: 68 chars                                       
rx{^(<-[=]>*?\=\s+<!before[<-[:]>*?\:]*'/usr/local/bin'[\:|$]>.*)$};
                                                     
gains on "(?:" => "[" are lost on additional quoting,
the character class syntax  "[^:]*" => "<-[:]>*"
and on "(?!" => "<!before".  

Mostly there are readability gains though, 
except perhaps on the quoting:                                                

 "=" => "\="
 ":" => "\:"

Maybe better would be single quotes:
   '='
   ':'
      
      
